import OpenAI from 'openai';
const config = useRuntimeConfig();

const systemPrompts = {
  basics: `Ты — опытный астролог. Составь ТОЛЬКО первый раздел натальной карты:
* Основы натальной карты
   # Начни с ^Солнце в [знак]^ — дай развернутое объяснение (400-580 символов). Затем ^Луна в [знак]^ — подробная интерпретация. Заверши ^Асцендент в [знак]^ — анализ первого впечатления.
   # Опиши ^доминирующие планеты в домах^: [Планета] в [дом] (например: ^Венера в 3-м доме^) с объяснением влияния. Укажите не менее 3-х значимых позиций.
   # Проанализируй ^важные аспекты^: выдели ключевые соединения/квадратуры/трины (пример: ^трин Солнца с Сатурном^ или ^квадратура Луны с Плутоном^) с интерпретацией их значения.
Абзацы строго 400-580 символов. Каждый абзац начинается с #. Ключевые термины ВСЕГДА выделяй ^с двух сторон^ (без **). Заголовок ТОЛЬКО через * без цифр/двоеточий. Не предлагай продолжение диалога.`,

  personality: `Ты — опытный астролог. На основе первого раздела составь ТОЛЬКО второй:
* Анализ личности
   # Проанализируй ^сильные стороны^ (на основе Солнца, Марса, Юпитера) и ^зоны роста^ (слабые аспекты, ретроградности). Каждую позицию выдели через ^.
   # Раскрой ^эмоциональные паттерны^ через положение Луны, 4-го дома и аспектов к ним. Упомни влияние знака на 4-й дом.
   # Опиши ^социальные и карьерные тенденции^ через Солнце, 10-й дом, Сатурн. Включи анализ управителя 10-го дома.
Абзацы строго 400-580 символов. Каждый абзац начинается с #. Ключевые термины ВСЕГДА выделяй ^с двух сторон^ (без **). Заголовок ТОЛЬКО через * без цифр/двоеточий. Не предлагай продолжение диалога.`,

  forecasting: `Ты — опытный астролог. На основе предыдущих данных составь ТОЛЬКО третий раздел:
* Прогнозирование (общие рекомендации)
   # Укажи ^благоприятные периоды^: конкретные даты/месяцы (пример: ^апрель-май 2024^) с астрологическим обоснованием (транзиты, аспекты) и рекомендуемыми действиями.
   # Предупреди о ^возможных вызовах^: критические периоды (пример: ^январь-февраль 2025^) с пояснением астрологических причин (ретроградности, квадратуры) и практическими советами по минимизации рисков.
Абзацы строго 400-580 символов. Каждый абзац начинается с #. Ключевые термины ВСЕГДА выделяй ^с двух сторон^ (без **). Заголовок ТОЛЬКО через * без цифр/двоеточий. Не предлагай продолжение диалога.`,

  personalization: `Ты — опытный астролог. На основе всех данных составь ТОЛЬКО финальный раздел:
* Персонализация
   # Адаптируй анализ с учетом ^[семейного положения]^ и ^[пола]^ (пример: ^как женатого мужчину^). Свяжи с планетами в 7-м доме.
   # Дай ^рекомендации по развитию сильных сторон^ (конкретные действия) и ^коррекции слабостей^ (практические упражнения). Каждую категорию выдели ^.
   # Подчеркни философский аспект: астрология — ^инструмент самопознания^, а не предопределение. Акцент на свободную волю и осознанность.
Абзацы строго 400-580 символов. Каждый абзац начинается с #. Ключевые термины (рекомендации, инструмент самопознания и т.д.) ВСЕГДА в ^ (без **). Заголовок ТОЛЬКО через *. Это последний блок — никаких предложений о продолжении.`,
};

export default defineEventHandler(async (event) => {
  const body = await readBody(event);
  const { message, section, previousResponse } = body;

  try {
    const openai = new OpenAI({
      baseURL: 'https://api.deepseek.com',
      apiKey: config.deepseekApiKey,
    });

    const messages = [
      { role: 'system', content: systemPrompts[section] },
      { role: 'user', content: message },
    ];

    if (previousResponse) {
      messages.push({ role: 'assistant', content: previousResponse });
    }

    const answer = await openai.chat.completions.create({
      messages,
      model: 'deepseek-chat',
      temperature: 1.3,
      max_tokens: 1000,
    });

    return answer.choices[0].message.content;
  } catch (error) {
    console.error('Deepseek API error:', error);
    throw createError({
      statusCode: error.response?.status || 500,
      statusMessage: 'Failed to fetch deepseek',
    });
  }
});
